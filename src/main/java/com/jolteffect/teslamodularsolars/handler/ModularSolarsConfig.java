package com.jolteffect.teslamodularsolars.handler;

import net.minecraftforge.common.config.Configuration;
import net.minecraftforge.fml.client.event.ConfigChangedEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import java.io.File;
import com.jolteffect.teslamodularsolars.TeslaModularSolars;


public class ModularSolarsConfig {
	
public static Configuration config;
    
    public static int panelCapacity = 50000;
    public static int panelPowerGen = 10;
    public static int panelTransferRate = 10;
    public static boolean panelWaterDamage = false;
    
    public static int capUpgradeT1 = 10000;
    public static int capUpgradeT2 = 100000;
    public static int capUpgradeT3 = 1000000;
    
    public static int genUpgradeT1 = 10;
    public static int genUpgradeT2 = 100;
    public static int genUpgradeT3 = 1000;
    
    public static int traUpgradeT1 = 10;
    public static int traUpgradeT2 = 100;
    public static int traUpgradeT3 = 1000;
    
    
    public static void initConfig (File configFile) {
        
        config = new Configuration(configFile);
        syncConfigData();
    }
    
    
    private static void syncConfigData () {
        
        panelCapacity = config.getInt("PanelCapacity", "SolarPanel", panelCapacity, 0, Integer.MAX_VALUE, "The amount of power that can be stored by the basic solar panel.");
        panelPowerGen = config.getInt("PanelPowerGen", "SolarPanel", panelPowerGen, 0, Integer.MAX_VALUE, "The amount of power that is generated by the basic solar panel every tick.");
        panelTransferRate = config.getInt("PanelTransferRate", "SolarPanel", panelTransferRate, 0, Integer.MAX_VALUE, "The amount of power that can be pulled from the basic solar panel at a time.");
        panelWaterDamage = config.getBoolean("PanelWaterDamage", "SolarPanel", panelWaterDamage, "Allows water damage to be disabled/enabled for the basic solar panel. Water damage being enabled will cause flowing water to break panels similarly to how they break redstone dust. Requires a relaunch of the game to take effect.");
        capUpgradeT1 = config.getInt("CapacityUpgradeT1", "CapacityUpgradeT1", capUpgradeT1, 0, Integer.MAX_VALUE, "The Solar Panel Tesla Capacitor upgrade value of T1 Item Upgrade.");
        capUpgradeT2 = config.getInt("CapacityUpgradeT2", "CapacityUpgradeT2", capUpgradeT2, 0, Integer.MAX_VALUE, "The Solar Panel Tesla Capacitor upgrade value of T2 Item Upgrade.");
        capUpgradeT3 = config.getInt("CapacityUpgradeT3", "CapacityUpgradeT3", capUpgradeT3, 0, Integer.MAX_VALUE, "The Solar Panel Tesla Capacitor upgrade value of T3 Item Upgrade.");
        genUpgradeT1 = config.getInt("TperTickUpgradeT1", "TperTickUpgradeT1", genUpgradeT1, 0, Integer.MAX_VALUE, "The Solar Panel Generation Tesla/PerTick upgrade value of T1 Item Upgrade.");
        genUpgradeT2 = config.getInt("TperTickUpgradeT2", "TperTickUpgradeT2", genUpgradeT2, 0, Integer.MAX_VALUE, "The Solar Panel Generation Tesla/PerTick upgrade value of T2 Item Upgrade.");
        genUpgradeT3 = config.getInt("TperTickUpgradeT3", "TperTickUpgradeT3", genUpgradeT3, 0, Integer.MAX_VALUE, "The Solar Panel Generation Tesla/PerTick upgrade value of T3 Item Upgrade.");
        traUpgradeT1 = config.getInt("TransferUpgradeT1", "TransferUpgradeT1", traUpgradeT1, 0, Integer.MAX_VALUE, "The Solar Panel Transfer Tesla/PerTick upgrade value of T1 Item Upgrade.");
        traUpgradeT2 = config.getInt("TransferUpgradeT2", "TransferUpgradeT2", traUpgradeT2, 0, Integer.MAX_VALUE, "The Solar Panel Transfer Tesla/PerTick upgrade value of T2 Item Upgrade.");
        traUpgradeT3 = config.getInt("TransferUpgradeT3", "TransferUpgradeT3", traUpgradeT3, 0, Integer.MAX_VALUE, "The Solar Panel Transfer Tesla/PerTick upgrade value of T3 Item Upgrade.");
        if (config.hasChanged())
            config.save();
    }
    
    @SubscribeEvent
    public void onConfigChange (ConfigChangedEvent.OnConfigChangedEvent event) {
        
        if (event.getModID().equals(TeslaModularSolars.MOD_ID))
            syncConfigData();
    }

}
